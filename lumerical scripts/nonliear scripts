#!3D simulation:
# disable CW norm
nonorm;
# get poynting vector from monitor.  
Poynting = getresult("monitor","P");
# integrate real Pz to get power.  Assume this monitor is 2D, in the XY plane
# This quantity will have units of Watts/Hz^2 due to the use of the nonorm state
Trans = 0.5 * integrate(real(Poynting.Pz),1:2,Poynting.x,Poynting.y);
# package data into dataset
T = matrixdataset("T"); # initialize dataset
T.addparameter("lambda",c/Poynting.f,"f",Poynting.f); # add frequency parameter
T.addattribute("T",Trans);  # add transmission attribute
# optionally, visualize data
visualize(T);


#!2D simulation:
# disable CW norm
nonorm;
# get poynting vector from monitor.  
Poynting = getresult("monitor_2","P");
# integrate real Pz to get power.  Assume this monitor is 2D, in the YZ plane
# This quantity will have units of Watts/Hz^2 due to the use of the nonorm state
Trans = 0.5 * integrate(pinch(real(Poynting.Px)),1,pinch(Poynting.y));
# package data into dataset
T = matrixdataset("T"); # initialize dataset
T.addparameter("lambda",c/Poynting.f,"f",Poynting.f); # add frequency parameter
T.addattribute("T",Trans);  # add transmission attribute
# optionally, visualize data
visualize(T);
